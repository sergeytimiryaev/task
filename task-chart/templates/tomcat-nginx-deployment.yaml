apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: {{ .Values.nginx.name }}
  name: {{ .Values.nginx.name }}
spec:
  replicas: {{ .Values.nginx.replicas }}
  selector:
    matchLabels:
      service: {{ .Values.nginx.name }}
  template:
    metadata:
      labels:
        service: {{ .Values.nginx.name }}
    spec:
      containers:
        - name: {{ .Values.nginx.containers.name }}
          image: {{ .Values.nginx.containers.image }}
          ports:
            - name: {{ .Values.nginx.containers.port }}
              containerPort: {{ .Values.nginx.service.port }}
          resources: {}
          volumeMounts:
            - name: {{ .Values.nginx.volumeMounts.name }}
              mountPath: {{ .Values.nginx.volumeMounts.mountPath }}
              subPath: {{ .Values.nginx.volumeMounts.subPath }}
        - env:
            - name: JDBC_PASS
              value: nkUKXaBY{Yws
            - name: JDBC_URL
              value: jdbc:mysql://db.svc:3306/javatest?connectTimeout=0&amp;socketTimeout=0&amp;autoReconnect=true
            - name: JDBC_USER
              value: example_db_user
            - name: VIRTUAL_HOST
              value: localhost
            - name: VIRTUAL_PORT
              value: "8080"
          image: {{ .Values.tomcat.image }}
          ports:
            - name: {{ .Values.tomcat.port }}
              containerPort: {{ .Values.nginx.service.port }}
          name: {{ .Values.tomcat.name }}
          resources: {}
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
      restartPolicy: Always
status: {}
